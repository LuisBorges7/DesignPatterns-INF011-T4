/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package main;

import interfaces.PizzaComponent;
import interfaces.PizzaDecorator;
import java.io.File;
import java.net.URL;
import java.net.URLClassLoader;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author luisborges
 */
public class MainWindow extends javax.swing.JFrame {

    /**
     * Creates new form MainWindow
     */
    public MainWindow() {
        initComponents();
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        ingredientesjScrollPane = new javax.swing.JScrollPane();
        availableDecorators = new javax.swing.JList<>();
        ingredientesEscolhidosjScrollPane = new javax.swing.JScrollPane();
        selectedDecorators = new javax.swing.JList<>();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        prepararjButton = new javax.swing.JButton();
        limparjButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        removeButton = new javax.swing.JButton();
        insertButton = new javax.swing.JButton();
        downButton = new javax.swing.JButton();
        upButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new java.awt.GridLayout(1, 0));

        availableDecorators.setModel(new javax.swing.AbstractListModel<String>() {
            File currentDir = new File("./plugins");
            String[] strings = currentDir.list();
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i].split("\\.")[0]; }
        });
        ingredientesjScrollPane.setViewportView(availableDecorators);

        ingredientesEscolhidosjScrollPane.setViewportView(selectedDecorators);

        jPanel1.setLayout(new java.awt.GridLayout(2, 1));

        jPanel2.setLayout(new java.awt.GridLayout(2, 1));

        prepararjButton.setText("Preparar Pedido");
        prepararjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prepararjButtonActionPerformed(evt);
            }
        });

        limparjButton.setText("Limpar");
        limparjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limparjButtonActionPerformed(evt);
            }
        });

        jLabel2.setText("Ingredientes");

        removeButton.setText("<");
        removeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeButtonActionPerformed(evt);
            }
        });

        insertButton.setText("    >    ");
        insertButton.setToolTipText("");
        insertButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertButtonActionPerformed(evt);
            }
        });

        downButton.setText("Down");
        downButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                downButtonActionPerformed(evt);
            }
        });

        upButton.setText("Up");
        upButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                upButtonActionPerformed(evt);
            }
        });

        jLabel1.setText("Ingredientes Selecionados");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(prepararjButton, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(ingredientesjScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 106, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(24, 24, 24)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)))
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(139, 139, 139))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(insertButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(removeButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(limparjButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ingredientesEscolhidosjScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(upButton, javax.swing.GroupLayout.DEFAULT_SIZE, 84, Short.MAX_VALUE)
                                    .addComponent(downButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(12, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(ingredientesjScrollPane)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addComponent(insertButton)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(removeButton)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(limparjButton, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(ingredientesEscolhidosjScrollPane))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(upButton)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(23, 23, 23)
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(downButton)))))
                .addGap(178, 178, 178)
                .addComponent(prepararjButton, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        getContentPane().add(jPanel3);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void insertButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertButtonActionPerformed
        String valor = availableDecorators.getSelectedValue();
        if(valor != null){
              selectedDecorators.setModel(model);
              model.addElement(valor);
        }
    }//GEN-LAST:event_insertButtonActionPerformed

    private void removeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeButtonActionPerformed
        String valor = selectedDecorators.getSelectedValue();
        int indice = selectedDecorators.getSelectedIndex();
        if(valor != null){
              selectedDecorators.setModel(model);
              model.remove(indice);
        }
    }//GEN-LAST:event_removeButtonActionPerformed

    private void upButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_upButtonActionPerformed
        int indice = selectedDecorators.getSelectedIndex();
        if (indice > 0){
            model.add((indice - 1), model.get(indice));
            model.remove(indice + 1);
            selectedDecorators.grabFocus();
            selectedDecorators.setSelectedIndex(indice-1);
        }
    }//GEN-LAST:event_upButtonActionPerformed

    private void downButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_downButtonActionPerformed
        int indice = selectedDecorators.getSelectedIndex();
        int tamLista = selectedDecorators.getLastVisibleIndex();
        if (indice < tamLista){
            model.add(indice + 2, model.get(indice));
            model.remove(indice);
            selectedDecorators.grabFocus();
            selectedDecorators.setSelectedIndex(indice+1);
        }
    }//GEN-LAST:event_downButtonActionPerformed

    private void prepararjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prepararjButtonActionPerformed
        try {
            listaSelecionada();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_prepararjButtonActionPerformed

    private void limparjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limparjButtonActionPerformed
         limpar();
    }//GEN-LAST:event_limparjButtonActionPerformed
    
    private void limpar(){
         selectedDecorators.setModel(model);
              model.removeAllElements();
    }
    
    private static void loadPlugins() throws ClassNotFoundException, InstantiationException, IllegalAccessException{
        File currentDir = new File("./plugins");
        String[] plugins = currentDir.list();
        jars = new URL[plugins.length];
        ulc = new URLClassLoader(jars);
        String pluginName ="";
        
        for(int i = 0; i < plugins.length; i++){
            pluginName = plugins[i].split("\\.")[0];
            PizzaComponent myPlugin = (PizzaComponent) Class.forName(pluginName.toLowerCase() + "." + pluginName, true, ulc).newInstance();
            pluginHashMap.put(pluginName, (PizzaComponent)myPlugin);   
            System.out.println("Plugin encontrado e carregado: 0" + (i+1) + " - " + pluginName);
        }
        System.out.println("\n**************\n");
    }
    
    private void prepararPizza() throws ClassNotFoundException, InstantiationException, IllegalAccessException{
        PizzaComponent decorated = new PizzaBasica();
        PizzaDecorator decorator = null;
        int size = selectedDecorators.getModel().getSize();
        for(int i = size -1; i >= 0 ; i--) {
            for (String key : pluginHashMap.keySet()) {
                 if(key.equals(selectedDecorators.getModel().getElementAt(i))){
                    decorator = (PizzaDecorator) (PizzaComponent) Class.forName(key.toLowerCase() + "." + key, true, ulc).newInstance();
                    decorator.setDecorated(decorated);
                    decorated = decorator;
                 }
             }
        }
        decorator.preparar();
        JOptionPane.showMessageDialog(jpanel, "Sua pizza está pronta!!"); 
        //limpar();
    }
    
    private void listaSelecionada() throws ClassNotFoundException, InstantiationException, IllegalAccessException{
        int size = selectedDecorators.getModel().getSize();
        String pizzaTeste = "";
        StringBuilder listaSelecionaFinalIvertida = new StringBuilder("Ingredientes selecionados pela ordem de colocação:");
        for(int i = size -1; i >= 0 ; i--) {
            listaSelecionaFinalIvertida.append("\n").append(selectedDecorators.getModel().getElementAt(i));
            pizzaTeste = pizzaTeste + "new " + selectedDecorators.getModel().getElementAt(i) + "(";
            }
        System.out.println(listaSelecionaFinalIvertida);
        System.out.println("\n**************\n");
        prepararPizza();
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) throws ClassNotFoundException, InstantiationException, IllegalAccessException {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //listaSelecionada(selectedDecorators);
        loadPlugins();
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainWindow().setVisible(true);
            }
        });
    }
    
    JPanel jpanel = new JPanel();
    private static final HashMap<String, PizzaComponent> pluginHashMap = new HashMap<String, PizzaComponent>();
    DefaultListModel model = new DefaultListModel();
    private static URL[] jars;
    private static URLClassLoader ulc;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList<String> availableDecorators;
    private javax.swing.JButton downButton;
    private javax.swing.JScrollPane ingredientesEscolhidosjScrollPane;
    private javax.swing.JScrollPane ingredientesjScrollPane;
    private javax.swing.JButton insertButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JButton limparjButton;
    private javax.swing.JButton prepararjButton;
    private javax.swing.JButton removeButton;
    private static javax.swing.JList<String> selectedDecorators;
    private javax.swing.JButton upButton;
    // End of variables declaration//GEN-END:variables
}
